[{"C:\\Users\\Asus\\Desktop\\react-assessment-5\\src\\index.js":"1","C:\\Users\\Asus\\Desktop\\react-assessment-5\\src\\App.js":"2","C:\\Users\\Asus\\Desktop\\react-assessment-5\\src\\styles\\theme.js":"3"},{"size":207,"mtime":1624693660698,"results":"4","hashOfConfig":"5"},{"size":16684,"mtime":1624696016200,"results":"6","hashOfConfig":"5"},{"size":323,"mtime":1624621230495,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1o110he",{"filePath":"11","messages":"12","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\Asus\\Desktop\\react-assessment-5\\src\\index.js",[],["17","18"],"C:\\Users\\Asus\\Desktop\\react-assessment-5\\src\\App.js",["19","20","21","22"],"import { useState, useEffect } from \"react\";\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport * as theme from \"./styles/theme\";\r\nimport IllustrationWorking from \"./assets/illustration-working.svg\";\r\nimport BgShortenDesktop from \"./assets/bg-shorten-desktop.svg\";\r\nimport IconBrandRecognition from \"./assets/icon-brand-recognition.svg\";\r\nimport IconDetailedRecords from \"./assets/icon-detailed-records.svg\";\r\nimport IconFullyCustomizable from \"./assets/icon-fully-customizable.svg\";\r\nimport BgBoostDesktop from \"./assets/bg-boost-desktop.svg\";\r\nimport IconFacebook from \"./assets/icon-facebook.svg\";\r\nimport IconTwitter from \"./assets/icon-twitter.svg\";\r\nimport IconPinterest from \"./assets/icon-pinterest.svg\";\r\nimport IconInstagram from \"./assets/icon-instagram.svg\";\r\n\r\nconst OuterContainer = styled.div`\r\n  @import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@500;700&display=swap\");\r\n  font-family: \"Poppins\", sans-serif;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 85%;\r\n  margin: 0 auto;\r\n  color: ${(props) => props.theme.colors.veryDarkViolet};\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px 20px;\r\n  border: 0px;\r\n  background-color: ${(props) => props.theme.colors.cyan};\r\n  color: ${(props) => props.theme.colors.white};\r\n  &:hover,\r\n  &:active {\r\n    opacity: 0.75;\r\n  }\r\n`;\r\n\r\nconst Navbar = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavbarLeft = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavbarBrandName = styled.h1`\r\n  margin-right: 3vw;\r\n`;\r\n\r\nconst NavbarNavLink = styled.a`\r\n  margin-right: 1vw;\r\n  color: ${(props) => props.theme.colors.veryDarkViolet};\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n\r\n  &:active {\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nconst NavbarRight = styled.div`\r\n  display: inline-block;\r\n  margin-left: auto;\r\n`;\r\n\r\nconst NavbarButton = styled(Button)`\r\n  margin-right: 5px;\r\n  border-radius: 20px;\r\n  background-color: ${(props) => props.theme.colors.cyan};\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst NavbarUnfilledButton = styled(NavbarButton)`\r\n  background-color: ${(props) => props.theme.colors.white};\r\n  color: ${(props) => props.theme.colors.darkViolet};\r\n  transition: background-color 0.25s, color 0.25s;\r\n\r\n  &:hover,\r\n  &:active {\r\n    background-color: ${(props) => props.theme.colors.cyan};\r\n    color: ${(props) => props.theme.colors.white};\r\n  }\r\n`;\r\n\r\nconst HeroContainer = styled(Container)`\r\n  width: 92.5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 2vh 0 0 auto;\r\n`;\r\n\r\nconst HeroRight = styled.div`\r\n  width: 50%;\r\n  order: 2;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst HeroLeft = styled.div`\r\n  padding: 1vw 4vw 1vw 1vw;\r\n  width: 50%;\r\n  order: 1;\r\n`;\r\n\r\nconst HeroTitleText = styled.h2`\r\n  font-size: 4rem;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nconst HeroSubtitleText = styled.p`\r\n  font-size: 1.3rem;\r\n  color: ${(props) => props.theme.colors.darkGray};\r\n`;\r\n\r\nconst HeroButton = styled(Button)`\r\n  border-radius: 20px;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst ShortenLinkOuterContainer = styled.div`\r\n  background-image: linear-gradient(\r\n    to bottom,\r\n    ${(props) => props.theme.colors.white} 50%,\r\n    ${(props) => props.theme.colors.lightGray} 50%,\r\n    ${(props) => props.theme.colors.lightGray}\r\n  );\r\n`;\r\n\r\nconst ShortenLinkContainer = styled(Container)`\r\n  display: flex;\r\n  position: relative;\r\n  margin-top: 10vh;\r\n  background-color: ${(props) => props.theme.colors.darkViolet};\r\n  background-image: url(${BgShortenDesktop});\r\n  background-size: cover;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst ShortenLinkHiddenImage = styled.img`\r\n  visibility: hidden;\r\n`;\r\n\r\nconst ShortenLinkInnerContainer = styled.div`\r\n  position: absolute;\r\n  margin: auto auto;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 80%;\r\n`;\r\n\r\nconst ShortenLinkInputText = styled.input`\r\n  height: 10vh;\r\n  width: 70%;\r\n  border: 0;\r\n  border-radius: 10px;\r\n  margin-right: 2vw;\r\n  font-size: 1.3rem;\r\n  padding: 2px 10px;\r\n`;\r\n\r\nconst ShortenLinkSubmitButton = styled(Button)`\r\n  width: 20%;\r\n  height: 10vh;\r\n  font-size: 1.2rem;\r\n  border-radius: 10px;\r\n\r\n  &:hover,\r\n  &:active {\r\n    filter: brightness(1.3);\r\n  }\r\n`;\r\n\r\nconst ShortenLinkShortenedOuterContainer = styled.div`\r\n  padding: 2vh;\r\n  background-color: ${(props) => props.theme.colors.lightGray};\r\n`;\r\n\r\nconst ShortenLinkPreviousShortenedLinks = styled.div``;\r\n\r\nconst ShortenLinkPreviousShortenedLink = styled(Container)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 2vh;\r\n  border-radius: 10px;\r\n  margin-top: 1vh;\r\n  background-color: ${(props) => props.theme.colors.white};\r\n`;\r\n\r\nconst ShortenLinkPreviousShortenedLinkOriginal = styled.a`\r\n  text-decoration: none;\r\n  color: ${(props) => props.theme.colors.veryDarkViolet};\r\n`;\r\n\r\nconst ShortenLinkPreviousShortenedLinkShortened = styled.a`\r\n  text-decoration: none;\r\n  margin-right: 2vw;\r\n  color: ${(props) => props.theme.colors.cyan};\r\n`;\r\n\r\nconst ShortenLinkPreviousShortenedLinkButton = styled(Button)`\r\n  border-radius: 5px;\r\n\r\n  &:active {\r\n    background-color: ${(props) => props.theme.colors.darkViolet};\r\n  }\r\n`;\r\n\r\nconst PreviousShortenedLinks = [];\r\n\r\nconst AdvancedStatisticsOuterContainer = styled.div`\r\n  background-color: ${(props) => props.theme.colors.lightGray};\r\n  z-index: 0;\r\n`;\r\n\r\nconst AdvancedStatisticsContainer = styled(Container)`\r\n  padding: 5vh;\r\n`;\r\n\r\nconst AdvancedStatisticsTitleText = styled.h2`\r\n  font-size: 2.5rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst AdvancedStatisticsSubtitleText = styled.p`\r\n  font-size: 1.3rem;\r\n  text-align: center;\r\n  color: ${(props) => props.theme.colors.gray};\r\n`;\r\n\r\nconst AdvancedStatisticsBoxContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 10vh auto;\r\n`;\r\n\r\nconst AdvancedStatisticsBox = styled.div`\r\n  position: relative;\r\n  padding: 15vh 5vh 5vh 5vh;\r\n  width: 20%;\r\n  background-color: ${(props) => props.theme.colors.white};\r\n  border-radius: 10px;\r\n  z-index: 2;\r\n`;\r\n\r\nconst AdvancedStatisticsBoxConnector = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 1%;\r\n  width: 95%;\r\n  height: 1vh;\r\n  z-index: 1;\r\n  background-color: ${(props) => props.theme.colors.cyan};\r\n`;\r\n\r\nconst AdvancedStatisticsBoxImageContainer = styled.div`\r\n  padding: 8%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  transform: translate(20%, -50%);\r\n  border-radius: 50%;\r\n  object-fit: contain;\r\n  background-color: ${(props) => props.theme.colors.darkViolet};\r\n`;\r\n\r\nconst AdvancedStatisticsBoxTitleText = styled.h2``;\r\n\r\nconst AdvancedStatisticsBoxDescriptionText = styled.p`\r\n  font-size: 1.1rem;\r\n  color: ${(props) => props.theme.colors.gray};\r\n`;\r\n\r\nconst AdvancedStatistics = [\r\n  {\r\n    image: IconBrandRecognition,\r\n    title: \"Brand Recognition\",\r\n    description:\r\n      \"Boost your brand recognition with each click. Generic links don't mean a thing. Branded links help instil confidence in your content.\",\r\n  },\r\n  {\r\n    image: IconDetailedRecords,\r\n    title: \"Detailed Records\",\r\n    description:\r\n      \"Gain insights into who is clicking your links. Knowing when and where people engage with your content helps inform better decisions.\",\r\n  },\r\n  {\r\n    image: IconFullyCustomizable,\r\n    title: \"Fully Customizable\",\r\n    description:\r\n      \"Improve brand awareness and content discoverability through customizable links, supercharging audience engagement.\",\r\n  },\r\n];\r\n\r\nconst BoostLinksOuterContainer = styled.div`\r\n  padding-top: 5vh;\r\n  background-color: ${(props) => props.theme.colors.darkViolet};\r\n  background-image: url(${BgBoostDesktop});\r\n  text-align: center;\r\n`;\r\n\r\nconst BoostLinksTitleText = styled.h2`\r\n  margin: 0 auto 2vh;\r\n  font-size: 3rem;\r\n  color: ${(props) => props.theme.colors.white};\r\n`;\r\n\r\nconst BoostLinksButton = styled(Button)`\r\n  font-size: 1.2rem;\r\n  margin: 10px auto 5vh auto;\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst FooterOuterContainer = styled.div`\r\n  background-color: ${(props) => props.theme.colors.veryDarkViolet};\r\n  padding: 10vh 0 10vh 0;\r\n`;\r\n\r\nconst FooterContainer = styled(Container)`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst FooterLogo = styled.div`\r\n  width: 30%;\r\n  color: ${(props) => props.theme.colors.white};\r\n`;\r\n\r\nconst FooterLogoTitle = styled.h2`\r\n  margin-top: 0;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst FooterList = styled.div`\r\n  width: 16%;\r\n  color: ${(props) => props.theme.colors.white};\r\n`;\r\n\r\nconst FooterLists = [\r\n  {\r\n    group: \"Features\",\r\n    items: [\"Link Shortening\", \"Branded Links\", \"Analytics\"],\r\n  },\r\n  { group: \"Resources\", items: [\"Blog\", \"Developers\", \"Support\"] },\r\n  { group: \"Company\", items: [\"About\", \"Our Team\", \"Careers\", \"Contact\"] },\r\n];\r\n\r\nconst FooterListItem = styled.a`\r\n  display: inline-block;\r\n  color: ${(props) => props.theme.colors.gray};\r\n  text-decoration: none;\r\n  margin-top: 1vh;\r\n\r\n  &:hover {\r\n    color: ${(props) => props.theme.colors.cyan};\r\n  }\r\n`;\r\n\r\nconst FooterSocialLink = styled.div`\r\n  width: 20%;\r\n  color: ${(props) => props.theme.colors.white};\r\n`;\r\n\r\nconst FooterSocialItem = styled.img`\r\n  display: inline-block;\r\n  color: ${(props) => props.theme.colors.gray};\r\n  text-decoration: none;\r\n  margin-right: 2vh;\r\n  &:hover {\r\n    color: ${(props) => props.theme.colors.cyan};\r\n  }\r\n`;\r\n\r\nconst FooterSocialLinks = [\r\n  { image: IconFacebook },\r\n  { image: IconTwitter },\r\n  { image: IconPinterest },\r\n  { image: IconInstagram },\r\n];\r\n\r\nfunction copyToClipboard(data) {\r\n  navigator.clipboard.writeText(data).then(\r\n    function () {\r\n      console.log(\"Content successfully copied\");\r\n    },\r\n    function () {\r\n      console.log(\"Content failed to copy\");\r\n    }\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [PreviousShortenedLinks, setPreviousShortenedLinks] = useState([]);\r\n\r\n  const callFetch = async (url) => {\r\n    try {\r\n      const res = await fetch(`https://api.shrtco.de/v2/shorten?url=${url}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n      const data = await res.json();\r\n      console.log(data, PreviousShortenedLinks);\r\n      setPreviousShortenedLinks([\r\n        ...PreviousShortenedLinks,\r\n        {\r\n          original: data.result.original_link,\r\n          shortened: data.result.full_short_link,\r\n        },\r\n      ]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ThemeProvider theme={theme}>\r\n        <OuterContainer>\r\n          <Container>\r\n            <Navbar>\r\n              <NavbarLeft>\r\n                <NavbarBrandName>Shortly</NavbarBrandName>\r\n                <div>\r\n                  <NavbarNavLink href=\"/\">Features</NavbarNavLink>\r\n                  <NavbarNavLink href=\"/\">Pricing</NavbarNavLink>\r\n                  <NavbarNavLink href=\"/\">Resources</NavbarNavLink>\r\n                </div>\r\n              </NavbarLeft>\r\n              <NavbarRight>\r\n                <NavbarUnfilledButton as=\"a\" href=\"/\">\r\n                  Login\r\n                </NavbarUnfilledButton>\r\n                <NavbarButton as=\"a\" href=\"/\">\r\n                  Sign&nbsp;Up\r\n                </NavbarButton>\r\n              </NavbarRight>\r\n            </Navbar>\r\n          </Container>\r\n          <HeroContainer>\r\n            <HeroRight>\r\n              <img src={IllustrationWorking} />\r\n            </HeroRight>\r\n            <HeroLeft>\r\n              <HeroTitleText>More than just shorter links</HeroTitleText>\r\n              <HeroSubtitleText>\r\n                Build your brand's recognition and get detailed insights on how\r\n                your links are performing.\r\n              </HeroSubtitleText>\r\n              <HeroButton>Get Started</HeroButton>\r\n            </HeroLeft>\r\n          </HeroContainer>\r\n          <ShortenLinkOuterContainer>\r\n            <ShortenLinkContainer>\r\n              <ShortenLinkHiddenImage src={BgShortenDesktop} />\r\n              <ShortenLinkInnerContainer>\r\n                <ShortenLinkInputText\r\n                  id=\"inputLink\"\r\n                  type=\"text\"\r\n                  placeholder=\"Shorten a link here...\"\r\n                />\r\n                <ShortenLinkSubmitButton\r\n                  onClick={() =>\r\n                    callFetch(document.getElementById(\"inputLink\").value)\r\n                  }\r\n                >\r\n                  Shorten It!\r\n                </ShortenLinkSubmitButton>\r\n              </ShortenLinkInnerContainer>\r\n            </ShortenLinkContainer>\r\n          </ShortenLinkOuterContainer>\r\n          <ShortenLinkShortenedOuterContainer>\r\n            {PreviousShortenedLinks.length > 0 ? (\r\n              <ShortenLinkPreviousShortenedLinks>\r\n                {PreviousShortenedLinks.map(({ original, shortened }) => {\r\n                  return (\r\n                    <ShortenLinkPreviousShortenedLink>\r\n                      <ShortenLinkPreviousShortenedLinkOriginal href={original}>\r\n                        {original}\r\n                      </ShortenLinkPreviousShortenedLinkOriginal>\r\n                      <div>\r\n                        <ShortenLinkPreviousShortenedLinkShortened\r\n                          href={shortened}\r\n                        >\r\n                          {shortened}\r\n                        </ShortenLinkPreviousShortenedLinkShortened>\r\n                        <ShortenLinkPreviousShortenedLinkButton\r\n                          onClick={() => copyToClipboard(shortened)}\r\n                        >\r\n                          Copy\r\n                        </ShortenLinkPreviousShortenedLinkButton>\r\n                      </div>\r\n                    </ShortenLinkPreviousShortenedLink>\r\n                  );\r\n                })}\r\n              </ShortenLinkPreviousShortenedLinks>\r\n            ) : null}\r\n          </ShortenLinkShortenedOuterContainer>\r\n          <AdvancedStatisticsOuterContainer>\r\n            <AdvancedStatisticsContainer>\r\n              <AdvancedStatisticsTitleText>\r\n                Advanced Statistics\r\n              </AdvancedStatisticsTitleText>\r\n              <AdvancedStatisticsSubtitleText>\r\n                Track how your links are performing across the web with our\r\n                advanced statistics dashboard.\r\n              </AdvancedStatisticsSubtitleText>\r\n              <AdvancedStatisticsBoxContainer>\r\n                <AdvancedStatisticsBoxConnector />\r\n                {AdvancedStatistics.map(({ title, description, image }) => {\r\n                  return (\r\n                    <AdvancedStatisticsBox>\r\n                      <AdvancedStatisticsBoxImageContainer>\r\n                        <img src={image} />\r\n                      </AdvancedStatisticsBoxImageContainer>\r\n                      <AdvancedStatisticsBoxTitleText>\r\n                        {title}\r\n                      </AdvancedStatisticsBoxTitleText>\r\n                      <AdvancedStatisticsBoxDescriptionText>\r\n                        {description}\r\n                      </AdvancedStatisticsBoxDescriptionText>\r\n                    </AdvancedStatisticsBox>\r\n                  );\r\n                })}\r\n              </AdvancedStatisticsBoxContainer>\r\n            </AdvancedStatisticsContainer>\r\n          </AdvancedStatisticsOuterContainer>\r\n          <BoostLinksOuterContainer>\r\n            <Container>\r\n              <BoostLinksTitleText>Boost your links today</BoostLinksTitleText>\r\n              <BoostLinksButton>Get Started</BoostLinksButton>\r\n            </Container>\r\n          </BoostLinksOuterContainer>\r\n          <FooterOuterContainer>\r\n            <FooterContainer>\r\n              <FooterLogo>\r\n                <FooterLogoTitle>Shortly</FooterLogoTitle>\r\n              </FooterLogo>\r\n              {FooterLists.map(({ group, items }) => {\r\n                return (\r\n                  <FooterList>\r\n                    {group}\r\n                    <br />\r\n                    {items.map((item) => {\r\n                      return (\r\n                        <>\r\n                          <FooterListItem href=\"/\">{item}</FooterListItem>\r\n                          <br />\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </FooterList>\r\n                );\r\n              })}\r\n              <FooterSocialLink>\r\n                {FooterSocialLinks.map(({ image }) => {\r\n                  return <FooterSocialItem src={image} />;\r\n                })}\r\n              </FooterSocialLink>\r\n            </FooterContainer>\r\n          </FooterOuterContainer>\r\n        </OuterContainer>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Asus\\Desktop\\react-assessment-5\\src\\styles\\theme.js",[],["23","24"],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":1,"column":20,"nodeType":"31","messageId":"32","endLine":1,"endColumn":29},{"ruleId":"29","severity":1,"message":"33","line":214,"column":7,"nodeType":"31","messageId":"32","endLine":214,"endColumn":29},{"ruleId":"34","severity":1,"message":"35","line":450,"column":15,"nodeType":"36","endLine":450,"endColumn":48},{"ruleId":"34","severity":1,"message":"35","line":522,"column":25,"nodeType":"36","endLine":522,"endColumn":44},{"ruleId":"25","replacedBy":"37"},{"ruleId":"27","replacedBy":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'PreviousShortenedLinks' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["39"],["40"],"no-global-assign","no-unsafe-negation"]